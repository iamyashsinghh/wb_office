import { useRouter } from "next/router";
import { useGlobalContext } from "@/context/MyContext";
import { useCallback } from "react";



//This is a custum hook. This will handle the call conversion. When the user will click in the call btn this will make a request for tracking.

export default function useCallConversion() {


    const router = useRouter();         //To grab the url 

    const { leadFormData, setLeadFormData } = useGlobalContext();            //state to open and close the lead model


    //using callback to optimise the return function. When any state change in component the openLoeadModel does not redefine.
    const callConversion = useCallback(


        (event, v_slug, v_id, by = "call") => {             //we lead is generated by model in by="form", and for call we pass call.

            const leadData = {
                url: router.asPath,
                venue_id: v_id,
                venue_slug: v_slug,
                type: "click",
                request_handle_by: by
            };

            console.log(leadData)

            // setLeadFormData(leadData);              //Set the data in the global state so that we can pass this data to the api.
            // setIsLeadsModelOpen(true);     

            // This function will be called when the user open the lead model and when the user will submit the lead. When the user open the load this function will call with type="click" and when the user will submit the form then again this will be called with the type type="submission"
            async function conversionHandler() {
                try {
                    const url = `${process.env.NEXT_PUBLIC_SERVER_DOMAIN}/api/click_conversion_handle`;
                    let response = await fetch(url, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(leadData)
                    })

                    response = await response.json();
                    // console.log(response)
                    if (response.success) {

                        // alert("success")
                    }


                } catch (error) {
                    console.log(error)
                }
            }//After setting the , opening the lead model     

            conversionHandler();

        },
        [router.asPath]           //onChange of router.asPath openLeadModel function redefine
    );

    return { callConversion };
}

